{"ast":null,"code":"var _jsxFileName = \"/Users/jrangel/Documents/dev/cross-reference-git/src/modules/series/Series.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport SeriesCard from './SeriesCard';\nimport seriesData from './series.json';\nimport categoriesData from '../categories/categories.json';\nimport manufacturersData from '../manufacturers/manufacturers.json';\nimport './Series.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Series = ({\n  manufacturerName,\n  manufacturerLogo,\n  onSelectSeries\n}) => {\n  _s();\n  var _categoriesData$categ, _manufacturersData$ma;\n  const {\n    categoryCode,\n    manufacturerCode\n  } = useParams();\n\n  // Convert categoryCode and manufacturerCode to IDs\n  const categoryId = (_categoriesData$categ = categoriesData.categories.find(category => category.code === categoryCode)) === null || _categoriesData$categ === void 0 ? void 0 : _categoriesData$categ.id;\n  const manufacturerId = (_manufacturersData$ma = manufacturersData.manufacturers.find(manufacturer => manufacturer.code === manufacturerCode)) === null || _manufacturersData$ma === void 0 ? void 0 : _manufacturersData$ma.id;\n  const filteredSeries = seriesData.series.filter(seriesItem => seriesItem.categoryId === categoryId && seriesItem.manufacturerId === manufacturerId).sort((a, b) => a.name.localeCompare(b.name)); // Ordenar alfabéticamente por nombre\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid mb-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Select Series\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: manufacturerLogo,\n          alt: manufacturerName,\n          className: \"img-fluid me-2\",\n          style: {\n            height: '50px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: manufacturerName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row d-flex flex-wrap p-2\",\n      children: filteredSeries.length > 0 ? filteredSeries.map(seriesItem => /*#__PURE__*/_jsxDEV(SeriesCard, {\n        series: seriesItem,\n        onSelect: () => onSelectSeries(categoryCode, manufacturerCode, seriesItem.id)\n      }, seriesItem.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 15\n      }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"No se encontraron series para la categor\\xEDa y fabricante seleccionados.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(Series, \"g+c2UsJj6wHQZOsNgaC9GiNSKy4=\", false, function () {\n  return [useParams];\n});\n_c = Series;\nexport default Series;\nvar _c;\n$RefreshReg$(_c, \"Series\");","map":{"version":3,"names":["React","useParams","SeriesCard","seriesData","categoriesData","manufacturersData","jsxDEV","_jsxDEV","Series","manufacturerName","manufacturerLogo","onSelectSeries","_s","_categoriesData$categ","_manufacturersData$ma","categoryCode","manufacturerCode","categoryId","categories","find","category","code","id","manufacturerId","manufacturers","manufacturer","filteredSeries","series","filter","seriesItem","sort","a","b","name","localeCompare","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","style","height","length","map","onSelect","_c","$RefreshReg$"],"sources":["/Users/jrangel/Documents/dev/cross-reference-git/src/modules/series/Series.js"],"sourcesContent":["import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport SeriesCard from './SeriesCard';\nimport seriesData from './series.json';\nimport categoriesData from '../categories/categories.json';\nimport manufacturersData from '../manufacturers/manufacturers.json';\nimport './Series.css';\n\nconst Series = ({ manufacturerName, manufacturerLogo, onSelectSeries }) => {\n  const { categoryCode, manufacturerCode } = useParams();\n\n  // Convert categoryCode and manufacturerCode to IDs\n  const categoryId = categoriesData.categories.find(category => category.code === categoryCode)?.id;\n  const manufacturerId = manufacturersData.manufacturers.find(manufacturer => manufacturer.code === manufacturerCode)?.id;\n\n  const filteredSeries = seriesData.series.filter(\n    (seriesItem) => \n      seriesItem.categoryId === categoryId && \n      seriesItem.manufacturerId === manufacturerId\n  ).sort((a, b) => a.name.localeCompare(b.name)); // Ordenar alfabéticamente por nombre\n\n  return (\n    <div className=\"container-fluid mb-5\">\n      <div className=\"row\">\n        <h3>Select Series</h3>\n        <div className=\"d-flex align-items-center\">\n          <img src={manufacturerLogo} alt={manufacturerName} className=\"img-fluid me-2\" style={{ height: '50px' }} />\n          <p>{manufacturerName}</p>\n        </div>\n      </div>\n      <div className=\"row d-flex flex-wrap p-2\">\n      {filteredSeries.length > 0 ? (\n            filteredSeries.map(seriesItem => (\n              <SeriesCard\n                key={seriesItem.id}\n                series={seriesItem}\n                onSelect={() => onSelectSeries(categoryCode, manufacturerCode, seriesItem.id)}\n              />\n            ))\n          ) : (\n            <div>No se encontraron series para la categoría y fabricante seleccionados.</div>\n          )}\n      </div>\n      </div>\n  );\n};\n\nexport default Series;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}