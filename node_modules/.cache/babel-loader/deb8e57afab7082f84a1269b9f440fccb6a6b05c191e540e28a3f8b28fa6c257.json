{"ast":null,"code":"import React from'react';import{useParams}from'react-router-dom';import SeriesCard from'./SeriesCard';import seriesData from'./series.json';import categoriesData from'../categories/categories.json';import manufacturersData from'../manufacturers/manufacturers.json';import'./Series.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Series=_ref=>{var _categoriesData$categ,_manufacturersData$ma;let{onSelectSeries}=_ref;const{categoryCode,manufacturerCode}=useParams();// Convert categoryCode and manufacturerCode to IDs\nconst categoryId=(_categoriesData$categ=categoriesData.categories.find(category=>category.code===categoryCode))===null||_categoriesData$categ===void 0?void 0:_categoriesData$categ.id;const manufacturerId=(_manufacturersData$ma=manufacturersData.manufacturers.find(manufacturer=>manufacturer.code===manufacturerCode))===null||_manufacturersData$ma===void 0?void 0:_manufacturersData$ma.id;console.log('Series component, categoryId and manufacturerId:',categoryId,manufacturerId);const filteredSeries=seriesData.series.filter(seriesItem=>seriesItem.categoryId===categoryId&&seriesItem.manufacturerId===manufacturerId).sort((a,b)=>a.name.localeCompare(b.name));// Ordenar alfabéticamente por nombre\nconsole.log('Filtered Series:',filteredSeries);return/*#__PURE__*/_jsxs(\"div\",{className:\"container-fluid mb-5\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"row\",children:/*#__PURE__*/_jsx(\"h3\",{children:\"Select Series\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"row d-flex flex-wrap p-2\",children:filteredSeries.length>0?filteredSeries.map(seriesItem=>/*#__PURE__*/_jsx(SeriesCard,{series:seriesItem,onSelect:()=>onSelectSeries(categoryCode,manufacturerCode,seriesItem.id)},seriesItem.id)):/*#__PURE__*/_jsx(\"div\",{children:\"No se encontraron series para la categor\\xEDa y fabricante seleccionados.\"})})]});};export default Series;","map":{"version":3,"names":["React","useParams","SeriesCard","seriesData","categoriesData","manufacturersData","jsx","_jsx","jsxs","_jsxs","Series","_ref","_categoriesData$categ","_manufacturersData$ma","onSelectSeries","categoryCode","manufacturerCode","categoryId","categories","find","category","code","id","manufacturerId","manufacturers","manufacturer","console","log","filteredSeries","series","filter","seriesItem","sort","a","b","name","localeCompare","className","children","length","map","onSelect"],"sources":["/Users/jrangel/Documents/dev/cross-reference/src/modules/series/Series.js"],"sourcesContent":["import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport SeriesCard from './SeriesCard';\nimport seriesData from './series.json';\nimport categoriesData from '../categories/categories.json';\nimport manufacturersData from '../manufacturers/manufacturers.json';\nimport './Series.css';\n\nconst Series = ({ onSelectSeries }) => {\n  const { categoryCode, manufacturerCode } = useParams();\n\n  // Convert categoryCode and manufacturerCode to IDs\n  const categoryId = categoriesData.categories.find(category => category.code === categoryCode)?.id;\n  const manufacturerId = manufacturersData.manufacturers.find(manufacturer => manufacturer.code === manufacturerCode)?.id;\n\n  console.log('Series component, categoryId and manufacturerId:', categoryId, manufacturerId);\n\n  const filteredSeries = seriesData.series.filter(\n    (seriesItem) => \n      seriesItem.categoryId === categoryId && \n      seriesItem.manufacturerId === manufacturerId\n  ).sort((a, b) => a.name.localeCompare(b.name)); // Ordenar alfabéticamente por nombre\n\n  console.log('Filtered Series:', filteredSeries);\n\n  return (\n    <div className=\"container-fluid mb-5\">\n      <div className=\"row\"><h3>Select Series</h3></div>\n      <div className=\"row d-flex flex-wrap p-2\">\n      {filteredSeries.length > 0 ? (\n            filteredSeries.map(seriesItem => (\n              <SeriesCard\n                key={seriesItem.id}\n                series={seriesItem}\n                onSelect={() => onSelectSeries(categoryCode, manufacturerCode, seriesItem.id)}\n              />\n            ))\n          ) : (\n            <div>No se encontraron series para la categoría y fabricante seleccionados.</div>\n          )}\n      </div>\n    </div>\n  );\n};\n\nexport default Series;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,SAAS,KAAQ,kBAAkB,CAC5C,MAAO,CAAAC,UAAU,KAAM,cAAc,CACrC,MAAO,CAAAC,UAAU,KAAM,eAAe,CACtC,MAAO,CAAAC,cAAc,KAAM,+BAA+B,CAC1D,MAAO,CAAAC,iBAAiB,KAAM,qCAAqC,CACnE,MAAO,cAAc,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEtB,KAAM,CAAAC,MAAM,CAAGC,IAAA,EAAwB,KAAAC,qBAAA,CAAAC,qBAAA,IAAvB,CAAEC,cAAe,CAAC,CAAAH,IAAA,CAChC,KAAM,CAAEI,YAAY,CAAEC,gBAAiB,CAAC,CAAGf,SAAS,CAAC,CAAC,CAEtD;AACA,KAAM,CAAAgB,UAAU,EAAAL,qBAAA,CAAGR,cAAc,CAACc,UAAU,CAACC,IAAI,CAACC,QAAQ,EAAIA,QAAQ,CAACC,IAAI,GAAKN,YAAY,CAAC,UAAAH,qBAAA,iBAA1EA,qBAAA,CAA4EU,EAAE,CACjG,KAAM,CAAAC,cAAc,EAAAV,qBAAA,CAAGR,iBAAiB,CAACmB,aAAa,CAACL,IAAI,CAACM,YAAY,EAAIA,YAAY,CAACJ,IAAI,GAAKL,gBAAgB,CAAC,UAAAH,qBAAA,iBAA5FA,qBAAA,CAA8FS,EAAE,CAEvHI,OAAO,CAACC,GAAG,CAAC,kDAAkD,CAAEV,UAAU,CAAEM,cAAc,CAAC,CAE3F,KAAM,CAAAK,cAAc,CAAGzB,UAAU,CAAC0B,MAAM,CAACC,MAAM,CAC5CC,UAAU,EACTA,UAAU,CAACd,UAAU,GAAKA,UAAU,EACpCc,UAAU,CAACR,cAAc,GAAKA,cAClC,CAAC,CAACS,IAAI,CAAC,CAACC,CAAC,CAAEC,CAAC,GAAKD,CAAC,CAACE,IAAI,CAACC,aAAa,CAACF,CAAC,CAACC,IAAI,CAAC,CAAC,CAAE;AAEhDT,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAEC,cAAc,CAAC,CAE/C,mBACEnB,KAAA,QAAK4B,SAAS,CAAC,sBAAsB,CAAAC,QAAA,eACnC/B,IAAA,QAAK8B,SAAS,CAAC,KAAK,CAAAC,QAAA,cAAC/B,IAAA,OAAA+B,QAAA,CAAI,eAAa,CAAI,CAAC,CAAK,CAAC,cACjD/B,IAAA,QAAK8B,SAAS,CAAC,0BAA0B,CAAAC,QAAA,CACxCV,cAAc,CAACW,MAAM,CAAG,CAAC,CACpBX,cAAc,CAACY,GAAG,CAACT,UAAU,eAC3BxB,IAAA,CAACL,UAAU,EAET2B,MAAM,CAAEE,UAAW,CACnBU,QAAQ,CAAEA,CAAA,GAAM3B,cAAc,CAACC,YAAY,CAAEC,gBAAgB,CAAEe,UAAU,CAACT,EAAE,CAAE,EAFzES,UAAU,CAACT,EAGjB,CACF,CAAC,cAEFf,IAAA,QAAA+B,QAAA,CAAK,2EAAsE,CAAK,CACjF,CACA,CAAC,EACH,CAAC,CAEV,CAAC,CAED,cAAe,CAAA5B,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}