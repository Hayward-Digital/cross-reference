{"ast":null,"code":"var _jsxFileName = \"/Users/jrangel/Documents/dev/cross-reference/src/modules/series/Series.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport SeriesCard from './SeriesCard';\nimport seriesData from './series.json';\nimport './Series.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Series = ({\n  onSelectSeries\n}) => {\n  _s();\n  var _categoriesData$categ, _manufacturersData$ma;\n  const {\n    categoryCode,\n    manufacturerCode\n  } = useParams();\n\n  // Convert categoryCode and manufacturerCode to IDs\n  const categoryId = (_categoriesData$categ = categoriesData.categories.find(category => category.code === categoryCode)) === null || _categoriesData$categ === void 0 ? void 0 : _categoriesData$categ.id;\n  const manufacturerId = (_manufacturersData$ma = manufacturersData.manufacturers.find(manufacturer => manufacturer.code === manufacturerCode)) === null || _manufacturersData$ma === void 0 ? void 0 : _manufacturersData$ma.id;\n  console.log('Series component, categoryId and manufacturerId:', categoryId, manufacturerId);\n  const filteredSeries = seriesData.series.filter(seriesItem => seriesItem.categoryId === categoryId && seriesItem.manufacturerId === manufacturerId);\n  console.log('Filtered Series:', filteredSeries);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid-container\",\n    children: filteredSeries.length > 0 ? filteredSeries.map(seriesItem => /*#__PURE__*/_jsxDEV(SeriesCard, {\n      series: seriesItem,\n      onSelect: () => onSelectSeries(categoryCode, manufacturerCode, seriesItem.id)\n    }, seriesItem.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No se encontraron series para la categor\\xEDa y fabricante seleccionados.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(Series, \"g+c2UsJj6wHQZOsNgaC9GiNSKy4=\", false, function () {\n  return [useParams];\n});\n_c = Series;\nexport default Series;\nvar _c;\n$RefreshReg$(_c, \"Series\");","map":{"version":3,"names":["React","useParams","SeriesCard","seriesData","jsxDEV","_jsxDEV","Series","onSelectSeries","_s","_categoriesData$categ","_manufacturersData$ma","categoryCode","manufacturerCode","categoryId","categoriesData","categories","find","category","code","id","manufacturerId","manufacturersData","manufacturers","manufacturer","console","log","filteredSeries","series","filter","seriesItem","className","children","length","map","onSelect","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jrangel/Documents/dev/cross-reference/src/modules/series/Series.js"],"sourcesContent":["import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport SeriesCard from './SeriesCard';\nimport seriesData from './series.json';\nimport './Series.css';\n\nconst Series = ({ onSelectSeries }) => {\n  const { categoryCode, manufacturerCode } = useParams();\n\n  // Convert categoryCode and manufacturerCode to IDs\n  const categoryId = categoriesData.categories.find(category => category.code === categoryCode)?.id;\n  const manufacturerId = manufacturersData.manufacturers.find(manufacturer => manufacturer.code === manufacturerCode)?.id;\n\n  console.log('Series component, categoryId and manufacturerId:', categoryId, manufacturerId);\n\n  const filteredSeries = seriesData.series.filter(\n    (seriesItem) => \n      seriesItem.categoryId === categoryId && \n      seriesItem.manufacturerId === manufacturerId\n  );\n\n  console.log('Filtered Series:', filteredSeries);\n\n  return (\n    <div className=\"grid-container\">\n      {filteredSeries.length > 0 ? (\n        filteredSeries.map(seriesItem => (\n          <SeriesCard\n            key={seriesItem.id}\n            series={seriesItem}\n            onSelect={() => onSelectSeries(categoryCode, manufacturerCode, seriesItem.id)}\n          />\n        ))\n      ) : (\n        <div>No se encontraron series para la categor√≠a y fabricante seleccionados.</div>\n      )}\n    </div>\n  );\n};\n\nexport default Series;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,UAAU,MAAM,eAAe;AACtC,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtB,MAAMC,MAAM,GAAGA,CAAC;EAAEC;AAAe,CAAC,KAAK;EAAAC,EAAA;EAAA,IAAAC,qBAAA,EAAAC,qBAAA;EACrC,MAAM;IAAEC,YAAY;IAAEC;EAAiB,CAAC,GAAGX,SAAS,CAAC,CAAC;;EAEtD;EACA,MAAMY,UAAU,IAAAJ,qBAAA,GAAGK,cAAc,CAACC,UAAU,CAACC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,KAAKP,YAAY,CAAC,cAAAF,qBAAA,uBAA1EA,qBAAA,CAA4EU,EAAE;EACjG,MAAMC,cAAc,IAAAV,qBAAA,GAAGW,iBAAiB,CAACC,aAAa,CAACN,IAAI,CAACO,YAAY,IAAIA,YAAY,CAACL,IAAI,KAAKN,gBAAgB,CAAC,cAAAF,qBAAA,uBAA5FA,qBAAA,CAA8FS,EAAE;EAEvHK,OAAO,CAACC,GAAG,CAAC,kDAAkD,EAAEZ,UAAU,EAAEO,cAAc,CAAC;EAE3F,MAAMM,cAAc,GAAGvB,UAAU,CAACwB,MAAM,CAACC,MAAM,CAC5CC,UAAU,IACTA,UAAU,CAAChB,UAAU,KAAKA,UAAU,IACpCgB,UAAU,CAACT,cAAc,KAAKA,cAClC,CAAC;EAEDI,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEC,cAAc,CAAC;EAE/C,oBACErB,OAAA;IAAKyB,SAAS,EAAC,gBAAgB;IAAAC,QAAA,EAC5BL,cAAc,CAACM,MAAM,GAAG,CAAC,GACxBN,cAAc,CAACO,GAAG,CAACJ,UAAU,iBAC3BxB,OAAA,CAACH,UAAU;MAETyB,MAAM,EAAEE,UAAW;MACnBK,QAAQ,EAAEA,CAAA,KAAM3B,cAAc,CAACI,YAAY,EAAEC,gBAAgB,EAAEiB,UAAU,CAACV,EAAE;IAAE,GAFzEU,UAAU,CAACV,EAAE;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGnB,CACF,CAAC,gBAEFjC,OAAA;MAAA0B,QAAA,EAAK;IAAsE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EACjF;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC9B,EAAA,CAhCIF,MAAM;EAAA,QACiCL,SAAS;AAAA;AAAAsC,EAAA,GADhDjC,MAAM;AAkCZ,eAAeA,MAAM;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}