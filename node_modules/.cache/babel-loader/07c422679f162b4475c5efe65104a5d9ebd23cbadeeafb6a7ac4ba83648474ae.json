{"ast":null,"code":"var _jsxFileName = \"/Users/jrangel/Documents/dev/cross-reference-git/src/modules/series/Series.js\";\nimport React from 'react';\nimport SelectionList from '../shared/SelectionList';\nimport seriesData from './series.json';\nimport categoriesData from '../categories/categories.json';\nimport manufacturersData from '../manufacturers/manufacturers.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Series = ({\n  onSelectSeries\n}) => {\n  var _categoriesData$categ, _manufacturersData$ma;\n  const params = new URLSearchParams(window.location.search);\n  const categoryCode = params.get('category');\n  const manufacturerCode = params.get('manufacturer');\n  const categoryId = (_categoriesData$categ = categoriesData.categories.find(category => category.code === categoryCode)) === null || _categoriesData$categ === void 0 ? void 0 : _categoriesData$categ.id;\n  const manufacturerId = (_manufacturersData$ma = manufacturersData.manufacturers.find(manufacturer => manufacturer.code === manufacturerCode)) === null || _manufacturersData$ma === void 0 ? void 0 : _manufacturersData$ma.id;\n\n  // Filtrar las series que pertenecen a la categoría y fabricante seleccionados\n  const filteredSeries = seriesData.series.filter(seriesItem => seriesItem.categoryId === categoryId && seriesItem.manufacturerId === manufacturerId);\n  return /*#__PURE__*/_jsxDEV(SelectionList, {\n    data: filteredSeries,\n    onSelect: seriesItem => onSelectSeries(categoryCode, manufacturerCode, seriesItem.id),\n    title: \"Series\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_c = Series;\nexport default Series;\nvar _c;\n$RefreshReg$(_c, \"Series\");","map":{"version":3,"names":["React","SelectionList","seriesData","categoriesData","manufacturersData","jsxDEV","_jsxDEV","Series","onSelectSeries","_categoriesData$categ","_manufacturersData$ma","params","URLSearchParams","window","location","search","categoryCode","get","manufacturerCode","categoryId","categories","find","category","code","id","manufacturerId","manufacturers","manufacturer","filteredSeries","series","filter","seriesItem","data","onSelect","title","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jrangel/Documents/dev/cross-reference-git/src/modules/series/Series.js"],"sourcesContent":["import React from 'react';\nimport SelectionList from '../shared/SelectionList';\nimport seriesData from './series.json';\nimport categoriesData from '../categories/categories.json';\nimport manufacturersData from '../manufacturers/manufacturers.json';\n\nconst Series = ({ onSelectSeries }) => {\n  const params = new URLSearchParams(window.location.search);\n  const categoryCode = params.get('category');\n  const manufacturerCode = params.get('manufacturer');\n\n  const categoryId = categoriesData.categories.find(category => category.code === categoryCode)?.id;\n  const manufacturerId = manufacturersData.manufacturers.find(manufacturer => manufacturer.code === manufacturerCode)?.id;\n\n  // Filtrar las series que pertenecen a la categoría y fabricante seleccionados\n  const filteredSeries = seriesData.series.filter(\n    seriesItem => seriesItem.categoryId === categoryId && seriesItem.manufacturerId === manufacturerId\n  );\n\n  return (\n    <SelectionList\n      data={filteredSeries}\n      onSelect={(seriesItem) => onSelectSeries(categoryCode, manufacturerCode, seriesItem.id)}\n      title=\"Series\"\n    />\n  );\n};\n\nexport default Series;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,aAAa,MAAM,yBAAyB;AACnD,OAAOC,UAAU,MAAM,eAAe;AACtC,OAAOC,cAAc,MAAM,+BAA+B;AAC1D,OAAOC,iBAAiB,MAAM,qCAAqC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpE,MAAMC,MAAM,GAAGA,CAAC;EAAEC;AAAe,CAAC,KAAK;EAAA,IAAAC,qBAAA,EAAAC,qBAAA;EACrC,MAAMC,MAAM,GAAG,IAAIC,eAAe,CAACC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC;EAC1D,MAAMC,YAAY,GAAGL,MAAM,CAACM,GAAG,CAAC,UAAU,CAAC;EAC3C,MAAMC,gBAAgB,GAAGP,MAAM,CAACM,GAAG,CAAC,cAAc,CAAC;EAEnD,MAAME,UAAU,IAAAV,qBAAA,GAAGN,cAAc,CAACiB,UAAU,CAACC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,KAAKP,YAAY,CAAC,cAAAP,qBAAA,uBAA1EA,qBAAA,CAA4Ee,EAAE;EACjG,MAAMC,cAAc,IAAAf,qBAAA,GAAGN,iBAAiB,CAACsB,aAAa,CAACL,IAAI,CAACM,YAAY,IAAIA,YAAY,CAACJ,IAAI,KAAKL,gBAAgB,CAAC,cAAAR,qBAAA,uBAA5FA,qBAAA,CAA8Fc,EAAE;;EAEvH;EACA,MAAMI,cAAc,GAAG1B,UAAU,CAAC2B,MAAM,CAACC,MAAM,CAC7CC,UAAU,IAAIA,UAAU,CAACZ,UAAU,KAAKA,UAAU,IAAIY,UAAU,CAACN,cAAc,KAAKA,cACtF,CAAC;EAED,oBACEnB,OAAA,CAACL,aAAa;IACZ+B,IAAI,EAAEJ,cAAe;IACrBK,QAAQ,EAAGF,UAAU,IAAKvB,cAAc,CAACQ,YAAY,EAAEE,gBAAgB,EAAEa,UAAU,CAACP,EAAE,CAAE;IACxFU,KAAK,EAAC;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACf,CAAC;AAEN,CAAC;AAACC,EAAA,GApBIhC,MAAM;AAsBZ,eAAeA,MAAM;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}