{"ast":null,"code":"var _jsxFileName = \"/Users/jrangel/Documents/dev/cross-reference/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Routes, Route, useNavigate } from 'react-router-dom';\nimport Category from './modules/categories/Category';\nimport Manufacturer from './modules/manufacturers/Manufacturer';\nimport Series from './modules/series/Series';\nimport Models from './modules/models/Models';\nimport Alternatives from './modules/models/Alternatives';\nimport TabNav from './components/tabnav/TabNav';\nimport categoriesData from './modules/categories/categories.json';\nimport manufacturersData from './modules/manufacturers/manufacturers.json';\nimport seriesData from './modules/series/series.json';\nimport modelsData from './modules/models/models.json';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = ({\n  onSelectCategory\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"App\",\n  children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Selecciona la categor\\xEDa del producto que deseas reemplazar\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Category, {\n    categories: categoriesData.categories,\n    onSelect: onSelectCategory\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 16,\n  columnNumber: 3\n}, this);\n_c = Home;\nconst App = () => {\n  _s();\n  const navigate = useNavigate();\n  const [activeTab, setActiveTab] = useState('category');\n  const [category, setCategory] = useState('');\n  const [manufacturer, setManufacturer] = useState('');\n  const [series, setSeries] = useState('');\n  const [model, setModel] = useState('');\n  const [categoryName, setCategoryName] = useState('');\n  const [manufacturerName, setManufacturerName] = useState('');\n  const [seriesName, setSeriesName] = useState('');\n  const [modelName, setModelName] = useState('');\n  const [goodModel, setGoodModel] = useState(null);\n  const [betterModel, setBetterModel] = useState(null);\n  const [bestModel, setBestModel] = useState(null);\n  const handleSelectCategory = category => {\n    setCategory(category.code);\n    setCategoryName(category.name);\n    setManufacturer('');\n    setSeries('');\n    setModel('');\n    setManufacturerName('');\n    setSeriesName('');\n    setModelName('');\n    setGoodModel(null);\n    setBetterModel(null);\n    setBestModel(null);\n    setActiveTab('manufacturer');\n    navigate(`/${category.code}`);\n  };\n  const handleSelectManufacturer = (categoryCode, manufacturerCode) => {\n    const manufacturerObj = manufacturersData.manufacturers.find(manufacturer => manufacturer.code === manufacturerCode);\n    setManufacturer(manufacturerCode);\n    setManufacturerName(manufacturerObj.name);\n    setSeries('');\n    setModel('');\n    setSeriesName('');\n    setModelName('');\n    setGoodModel(null);\n    setBetterModel(null);\n    setBestModel(null);\n    setActiveTab('series');\n    navigate(`/${categoryCode}/${manufacturerCode}`);\n  };\n  const handleSelectSeries = (categoryCode, manufacturerCode, seriesId) => {\n    const seriesObj = seriesData.series.find(series => series.id === parseInt(seriesId));\n    setSeries(seriesId);\n    setSeriesName(seriesObj.name);\n    setModel('');\n    setModelName('');\n    setGoodModel(null);\n    setBetterModel(null);\n    setBestModel(null);\n    setActiveTab('model');\n    navigate(`/${categoryCode}/${manufacturerCode}/${seriesId}`);\n  };\n  const handleSelectModel = (categoryCode, manufacturerCode, seriesId, modelId) => {\n    const modelObj = modelsData.models.find(model => model.id === parseInt(modelId));\n    setModel(modelId);\n    setModelName(modelObj.name);\n    setGoodModel(modelsData.models.find(model => model.id === modelObj.alternatives.good));\n    setBetterModel(modelsData.models.find(model => model.id === modelObj.alternatives.better));\n    setBestModel(modelsData.models.find(model => model.id === modelObj.alternatives.best));\n    setActiveTab('alternative');\n    navigate(`/${categoryCode}/${manufacturerCode}/${seriesId}/${modelId}/alternatives`);\n  };\n  const handleStartAgain = () => {\n    setCategory('');\n    setManufacturer('');\n    setSeries('');\n    setModel('');\n    setCategoryName('');\n    setManufacturerName('');\n    setSeriesName('');\n    setModelName('');\n    setGoodModel(null);\n    setBetterModel(null);\n    setBestModel(null);\n    setActiveTab('category');\n    navigate('/');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(TabNav, {\n      activeTab: activeTab,\n      category: category,\n      manufacturer: manufacturer,\n      series: series,\n      model: model,\n      categoryName: categoryName,\n      manufacturerName: manufacturerName,\n      seriesName: seriesName,\n      modelName: modelName,\n      setActiveTab: setActiveTab\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Home, {\n          onSelectCategory: handleSelectCategory\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/:categoryCode\",\n        element: /*#__PURE__*/_jsxDEV(Manufacturer, {\n          onSelectManufacturer: handleSelectManufacturer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 47\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/:categoryCode/:manufacturerCode\",\n        element: /*#__PURE__*/_jsxDEV(Series, {\n          onSelectSeries: handleSelectSeries\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 65\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/:categoryCode/:manufacturerCode/:seriesId\",\n        element: /*#__PURE__*/_jsxDEV(Models, {\n          onSelectModel: handleSelectModel\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 75\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/:categoryCode/:manufacturerCode/:seriesId/:modelId/alternatives\",\n        element: /*#__PURE__*/_jsxDEV(Alternatives, {\n          goodModel: goodModel,\n          betterModel: betterModel,\n          bestModel: bestModel,\n          onStartAgain: handleStartAgain\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 97\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"KXnEy0tnRKBuwXaF6FexbegnQvo=\", false, function () {\n  return [useNavigate];\n});\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"Home\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","Routes","Route","useNavigate","Category","Manufacturer","Series","Models","Alternatives","TabNav","categoriesData","manufacturersData","seriesData","modelsData","jsxDEV","_jsxDEV","Home","onSelectCategory","className","children","fileName","_jsxFileName","lineNumber","columnNumber","categories","onSelect","_c","App","_s","navigate","activeTab","setActiveTab","category","setCategory","manufacturer","setManufacturer","series","setSeries","model","setModel","categoryName","setCategoryName","manufacturerName","setManufacturerName","seriesName","setSeriesName","modelName","setModelName","goodModel","setGoodModel","betterModel","setBetterModel","bestModel","setBestModel","handleSelectCategory","code","name","handleSelectManufacturer","categoryCode","manufacturerCode","manufacturerObj","manufacturers","find","handleSelectSeries","seriesId","seriesObj","id","parseInt","handleSelectModel","modelId","modelObj","models","alternatives","good","better","best","handleStartAgain","path","element","onSelectManufacturer","onSelectSeries","onSelectModel","onStartAgain","_c2","$RefreshReg$"],"sources":["/Users/jrangel/Documents/dev/cross-reference/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Routes, Route, useNavigate } from 'react-router-dom';\nimport Category from './modules/categories/Category';\nimport Manufacturer from './modules/manufacturers/Manufacturer';\nimport Series from './modules/series/Series';\nimport Models from './modules/models/Models';\nimport Alternatives from './modules/models/Alternatives';\nimport TabNav from './components/tabnav/TabNav';\nimport categoriesData from './modules/categories/categories.json';\nimport manufacturersData from './modules/manufacturers/manufacturers.json';\nimport seriesData from './modules/series/series.json';\nimport modelsData from './modules/models/models.json';\nimport './App.css';\n\nconst Home = ({ onSelectCategory }) => (\n  <div className=\"App\">\n    <h1>Selecciona la categoría del producto que deseas reemplazar</h1>\n    <Category categories={categoriesData.categories} onSelect={onSelectCategory} />\n  </div>\n);\n\nconst App = () => {\n  const navigate = useNavigate();\n  const [activeTab, setActiveTab] = useState('category');\n  const [category, setCategory] = useState('');\n  const [manufacturer, setManufacturer] = useState('');\n  const [series, setSeries] = useState('');\n  const [model, setModel] = useState('');\n  const [categoryName, setCategoryName] = useState('');\n  const [manufacturerName, setManufacturerName] = useState('');\n  const [seriesName, setSeriesName] = useState('');\n  const [modelName, setModelName] = useState('');\n  const [goodModel, setGoodModel] = useState(null);\n  const [betterModel, setBetterModel] = useState(null);\n  const [bestModel, setBestModel] = useState(null);\n\n  const handleSelectCategory = (category) => {\n    setCategory(category.code);\n    setCategoryName(category.name);\n    setManufacturer('');\n    setSeries('');\n    setModel('');\n    setManufacturerName('');\n    setSeriesName('');\n    setModelName('');\n    setGoodModel(null);\n    setBetterModel(null);\n    setBestModel(null);\n    setActiveTab('manufacturer');\n    navigate(`/${category.code}`);\n  };\n\n  const handleSelectManufacturer = (categoryCode, manufacturerCode) => {\n    const manufacturerObj = manufacturersData.manufacturers.find(manufacturer => manufacturer.code === manufacturerCode);\n    setManufacturer(manufacturerCode);\n    setManufacturerName(manufacturerObj.name);\n    setSeries('');\n    setModel('');\n    setSeriesName('');\n    setModelName('');\n    setGoodModel(null);\n    setBetterModel(null);\n    setBestModel(null);\n    setActiveTab('series');\n    navigate(`/${categoryCode}/${manufacturerCode}`);\n  };\n\n  const handleSelectSeries = (categoryCode, manufacturerCode, seriesId) => {\n    const seriesObj = seriesData.series.find(series => series.id === parseInt(seriesId));\n    setSeries(seriesId);\n    setSeriesName(seriesObj.name);\n    setModel('');\n    setModelName('');\n    setGoodModel(null);\n    setBetterModel(null);\n    setBestModel(null);\n    setActiveTab('model');\n    navigate(`/${categoryCode}/${manufacturerCode}/${seriesId}`);\n  };\n\n  const handleSelectModel = (categoryCode, manufacturerCode, seriesId, modelId) => {\n    const modelObj = modelsData.models.find(model => model.id === parseInt(modelId));\n    setModel(modelId);\n    setModelName(modelObj.name);\n    setGoodModel(modelsData.models.find(model => model.id === modelObj.alternatives.good));\n    setBetterModel(modelsData.models.find(model => model.id === modelObj.alternatives.better));\n    setBestModel(modelsData.models.find(model => model.id === modelObj.alternatives.best));\n    setActiveTab('alternative');\n    navigate(`/${categoryCode}/${manufacturerCode}/${seriesId}/${modelId}/alternatives`);\n  };\n\n  const handleStartAgain = () => {\n    setCategory('');\n    setManufacturer('');\n    setSeries('');\n    setModel('');\n    setCategoryName('');\n    setManufacturerName('');\n    setSeriesName('');\n    setModelName('');\n    setGoodModel(null);\n    setBetterModel(null);\n    setBestModel(null);\n    setActiveTab('category');\n    navigate('/');\n  };\n\n  return (\n    <div>\n      <TabNav\n        activeTab={activeTab}\n        category={category}\n        manufacturer={manufacturer}\n        series={series}\n        model={model}\n        categoryName={categoryName}\n        manufacturerName={manufacturerName}\n        seriesName={seriesName}\n        modelName={modelName}\n        setActiveTab={setActiveTab}\n      />\n      <Routes>\n        <Route path=\"/\" element={<Home onSelectCategory={handleSelectCategory} />} />\n        <Route path=\"/:categoryCode\" element={<Manufacturer onSelectManufacturer={handleSelectManufacturer} />} />\n        <Route path=\"/:categoryCode/:manufacturerCode\" element={<Series onSelectSeries={handleSelectSeries} />} />\n        <Route path=\"/:categoryCode/:manufacturerCode/:seriesId\" element={<Models onSelectModel={handleSelectModel} />} />\n        <Route path=\"/:categoryCode/:manufacturerCode/:seriesId/:modelId/alternatives\" element={<Alternatives goodModel={goodModel} betterModel={betterModel} bestModel={bestModel} onStartAgain={handleStartAgain} />} />\n      </Routes>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}