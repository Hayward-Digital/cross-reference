{"ast":null,"code":"var _jsxFileName = \"/Users/jrangel/Documents/dev/cross-reference/src/modules/models/Models.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport ModelsCard from './ModelsCard';\nimport ModelDetails from './ModelDetails';\nimport modelsData from './models.json';\nimport './Models.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Models = () => {\n  _s();\n  const {\n    seriesId\n  } = useParams();\n  const [selectedModel, setSelectedModel] = useState(null);\n  const filteredModels = modelsData.models.filter(model => model.seriesId === parseInt(seriesId));\n  const handleSelectModel = model => {\n    setSelectedModel(model);\n  };\n  const handleDeselectModel = () => {\n    setSelectedModel(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"models-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid-container\",\n      children: filteredModels.map(model => /*#__PURE__*/_jsxDEV(ModelsCard, {\n        model: model,\n        isActive: selectedModel && selectedModel.id === model.id,\n        onSelect: () => handleSelectModel(model)\n      }, model.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), selectedModel && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"model-details-overlay\",\n      children: /*#__PURE__*/_jsxDEV(ModelDetails, {\n        model: selectedModel,\n        onDeselect: handleDeselectModel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(Models, \"bA2QQLIA5qPx+0rtQabRRVNk4/w=\", false, function () {\n  return [useParams];\n});\n_c = Models;\nexport default Models;\nvar _c;\n$RefreshReg$(_c, \"Models\");","map":{"version":3,"names":["React","useState","useParams","ModelsCard","ModelDetails","modelsData","jsxDEV","_jsxDEV","Models","_s","seriesId","selectedModel","setSelectedModel","filteredModels","models","filter","model","parseInt","handleSelectModel","handleDeselectModel","className","children","map","isActive","id","onSelect","fileName","_jsxFileName","lineNumber","columnNumber","onDeselect","_c","$RefreshReg$"],"sources":["/Users/jrangel/Documents/dev/cross-reference/src/modules/models/Models.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport ModelsCard from './ModelsCard';\nimport ModelDetails from './ModelDetails';\nimport modelsData from './models.json';\nimport './Models.css';\n\nconst Models = () => {\n  const { seriesId } = useParams();\n  const [selectedModel, setSelectedModel] = useState(null);\n\n  const filteredModels = modelsData.models.filter(\n    (model) => model.seriesId === parseInt(seriesId)\n  );\n\n  const handleSelectModel = (model) => {\n    setSelectedModel(model);\n  };\n\n  const handleDeselectModel = () => {\n    setSelectedModel(null);\n  };\n\n  return (\n    <div className=\"models-container\">\n      <div className=\"grid-container\">\n        {filteredModels.map(model => (\n          <ModelsCard\n            key={model.id}\n            model={model}\n            isActive={selectedModel && selectedModel.id === model.id}\n            onSelect={() => handleSelectModel(model)}\n          />\n        ))}\n      </div>\n      {selectedModel && (\n        <div className=\"model-details-overlay\">\n          <ModelDetails model={selectedModel} onDeselect={handleDeselectModel} />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Models;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,UAAU,MAAM,eAAe;AACtC,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtB,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM;IAAEC;EAAS,CAAC,GAAGR,SAAS,CAAC,CAAC;EAChC,MAAM,CAACS,aAAa,EAAEC,gBAAgB,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAExD,MAAMY,cAAc,GAAGR,UAAU,CAACS,MAAM,CAACC,MAAM,CAC5CC,KAAK,IAAKA,KAAK,CAACN,QAAQ,KAAKO,QAAQ,CAACP,QAAQ,CACjD,CAAC;EAED,MAAMQ,iBAAiB,GAAIF,KAAK,IAAK;IACnCJ,gBAAgB,CAACI,KAAK,CAAC;EACzB,CAAC;EAED,MAAMG,mBAAmB,GAAGA,CAAA,KAAM;IAChCP,gBAAgB,CAAC,IAAI,CAAC;EACxB,CAAC;EAED,oBACEL,OAAA;IAAKa,SAAS,EAAC,kBAAkB;IAAAC,QAAA,gBAC/Bd,OAAA;MAAKa,SAAS,EAAC,gBAAgB;MAAAC,QAAA,EAC5BR,cAAc,CAACS,GAAG,CAACN,KAAK,iBACvBT,OAAA,CAACJ,UAAU;QAETa,KAAK,EAAEA,KAAM;QACbO,QAAQ,EAAEZ,aAAa,IAAIA,aAAa,CAACa,EAAE,KAAKR,KAAK,CAACQ,EAAG;QACzDC,QAAQ,EAAEA,CAAA,KAAMP,iBAAiB,CAACF,KAAK;MAAE,GAHpCA,KAAK,CAACQ,EAAE;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAId,CACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,EACLlB,aAAa,iBACZJ,OAAA;MAAKa,SAAS,EAAC,uBAAuB;MAAAC,QAAA,eACpCd,OAAA,CAACH,YAAY;QAACY,KAAK,EAAEL,aAAc;QAACmB,UAAU,EAAEX;MAAoB;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpE,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACpB,EAAA,CAnCID,MAAM;EAAA,QACWN,SAAS;AAAA;AAAA6B,EAAA,GAD1BvB,MAAM;AAqCZ,eAAeA,MAAM;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}