{"ast":null,"code":"import React,{useState}from'react';import{useLocation}from'react-router-dom';import ItemCard from'../shared/ItemCard';import seriesData from'./series.json';import categoriesData from'../categories/categories.json';import manufacturersData from'../manufacturers/manufacturers.json';import Pagination from'../../components/pagination/Pagination';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Series=_ref=>{var _categoriesData$categ,_manufacturersData$ma;let{manufacturerName,manufacturerLogo,onSelectSeries}=_ref;const{search}=useLocation();const params=new URLSearchParams(search);const categoryCode=params.get('category');const manufacturerCode=params.get('manufacturer');const categoryId=(_categoriesData$categ=categoriesData.categories.find(category=>category.code===categoryCode))===null||_categoriesData$categ===void 0?void 0:_categoriesData$categ.id;const manufacturerId=(_manufacturersData$ma=manufacturersData.manufacturers.find(manufacturer=>manufacturer.code===manufacturerCode))===null||_manufacturersData$ma===void 0?void 0:_manufacturersData$ma.id;const filteredSeries=seriesData.series.filter(seriesItem=>seriesItem.categoryId===categoryId&&seriesItem.manufacturerId===manufacturerId).sort((a,b)=>a.name.localeCompare(b.name));// Paginación\nconst[currentPage,setCurrentPage]=useState(1);const seriesPerPage=12;const totalPages=Math.ceil(filteredSeries.length/seriesPerPage);const displayedSeries=filteredSeries.slice((currentPage-1)*seriesPerPage,currentPage*seriesPerPage);const handlePageChange=page=>{setCurrentPage(page);};return/*#__PURE__*/_jsxs(\"div\",{className:\"container-fluid mb-5\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"row\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex align-items-center\",children:[/*#__PURE__*/_jsx(\"img\",{src:manufacturerLogo,alt:manufacturerName,className:\"img-fluid me-2 border\",style:{height:'100px'}}),/*#__PURE__*/_jsxs(\"h4\",{className:\"ps-2\",children:[manufacturerName,\" \",/*#__PURE__*/_jsx(\"span\",{className:\"fw-bold\",children:\"Series\"})]})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"row d-flex flex-wrap p-2\",children:displayedSeries.length>0?displayedSeries.map(seriesItem=>/*#__PURE__*/_jsx(ItemCard,{item:seriesItem,onSelect:()=>onSelectSeries(categoryCode,manufacturerCode,seriesItem.id)},seriesItem.id)):/*#__PURE__*/_jsx(\"div\",{children:\"No series found for the selected category and manufacturer.\"})}),filteredSeries.length>seriesPerPage&&/*#__PURE__*/_jsx(\"div\",{className:\"row\",children:/*#__PURE__*/_jsx(Pagination,{currentPage:currentPage,totalPages:totalPages,onPageChange:handlePageChange})})]});};export default Series;","map":{"version":3,"names":["React","useState","useLocation","ItemCard","seriesData","categoriesData","manufacturersData","Pagination","jsx","_jsx","jsxs","_jsxs","Series","_ref","_categoriesData$categ","_manufacturersData$ma","manufacturerName","manufacturerLogo","onSelectSeries","search","params","URLSearchParams","categoryCode","get","manufacturerCode","categoryId","categories","find","category","code","id","manufacturerId","manufacturers","manufacturer","filteredSeries","series","filter","seriesItem","sort","a","b","name","localeCompare","currentPage","setCurrentPage","seriesPerPage","totalPages","Math","ceil","length","displayedSeries","slice","handlePageChange","page","className","children","src","alt","style","height","map","item","onSelect","onPageChange"],"sources":["/Users/jrangel/Documents/dev/cross-reference-git/src/modules/series/Series.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport ItemCard from '../shared/ItemCard';\nimport seriesData from './series.json';\nimport categoriesData from '../categories/categories.json';\nimport manufacturersData from '../manufacturers/manufacturers.json';\nimport Pagination from '../../components/pagination/Pagination';\n\nconst Series = ({ manufacturerName, manufacturerLogo, onSelectSeries }) => {\n  const { search } = useLocation();\n  const params = new URLSearchParams(search);\n  const categoryCode = params.get('category');\n  const manufacturerCode = params.get('manufacturer');\n\n  const categoryId = categoriesData.categories.find(category => category.code === categoryCode)?.id;\n  const manufacturerId = manufacturersData.manufacturers.find(manufacturer => manufacturer.code === manufacturerCode)?.id;\n\n  const filteredSeries = seriesData.series.filter(\n    (seriesItem) => \n      seriesItem.categoryId === categoryId && \n      seriesItem.manufacturerId === manufacturerId\n  ).sort((a, b) => a.name.localeCompare(b.name));\n\n  // Paginación\n  const [currentPage, setCurrentPage] = useState(1);\n  const seriesPerPage = 12;\n  const totalPages = Math.ceil(filteredSeries.length / seriesPerPage);\n  const displayedSeries = filteredSeries.slice((currentPage - 1) * seriesPerPage, currentPage * seriesPerPage);\n\n  const handlePageChange = (page) => {\n    setCurrentPage(page);\n  };\n\n  return (\n    <div className=\"container-fluid mb-5\">\n      <div className=\"row\">\n        <div className=\"d-flex align-items-center\">\n          <img src={manufacturerLogo} alt={manufacturerName} className=\"img-fluid me-2 border\" style={{ height: '100px' }} />\n          <h4 className='ps-2'>{manufacturerName} <span className='fw-bold'>Series</span></h4>\n        </div>\n      </div>\n      <div className=\"row d-flex flex-wrap p-2\">\n        {displayedSeries.length > 0 ? (\n          displayedSeries.map(seriesItem => (\n            <ItemCard\n              key={seriesItem.id}\n              item={seriesItem}\n              onSelect={() => onSelectSeries(categoryCode, manufacturerCode, seriesItem.id)}\n            />\n          ))\n        ) : (\n          <div>No series found for the selected category and manufacturer.</div>\n        )}\n      </div>\n      {filteredSeries.length > seriesPerPage && (\n        <div className=\"row\">\n          <Pagination currentPage={currentPage} totalPages={totalPages} onPageChange={handlePageChange} />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Series;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}