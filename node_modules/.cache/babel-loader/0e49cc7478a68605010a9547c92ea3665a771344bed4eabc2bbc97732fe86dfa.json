{"ast":null,"code":"var _jsxFileName = \"/Users/jrangel/Documents/dev/cross-reference-git/src/modules/series/Series.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport SelectionList from '../shared/SelectionList';\nimport seriesData from './series.json';\nimport manufacturersData from '../manufacturers/manufacturers.json';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Series = ({\n  onSelectSeries,\n  setManufacturer,\n  setManufacturerName,\n  setManufacturerLogo,\n  setSeries,\n  setSeriesName,\n  setModel,\n  setModelName\n}) => {\n  _s();\n  const params = new URLSearchParams(window.location.search);\n  const manufacturerCode = params.get('manufacturer');\n  const navigate = useNavigate();\n  const manufacturer = manufacturersData.manufacturers.find(manufacturer => manufacturer.code === manufacturerCode);\n  const filteredSeries = seriesData.series.filter(seriesItem => seriesItem.manufacturerId === manufacturer.id);\n  const handleSelectSeries = (categoryCode, manufacturerCode, seriesId) => {\n    const manufacturer = manufacturersData.manufacturers.find(manufacturer => manufacturer.code === manufacturerCode);\n    const series = seriesData.series.find(series => series.id === parseInt(seriesId));\n    if (!manufacturer || !series) {\n      console.error(\"Manufacturer or series not found\");\n      return;\n    }\n    setManufacturer(manufacturer.code);\n    setManufacturerName(manufacturer.name);\n    setManufacturerLogo(manufacturer.logo);\n    setSeries(series.id);\n    setSeriesName(series.name);\n    setModel('');\n    setModelName('Select One');\n    navigate(`/?tab=model&category=${categoryCode}&manufacturer=${manufacturerCode}&series=${seriesId}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid mb-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: manufacturer.logo,\n          alt: manufacturer.name,\n          className: \"img-fluid me-2 border\",\n          style: {\n            height: '100px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"ps-2\",\n          children: [manufacturer.name, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"fw-bold\",\n            children: \"Series\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 52\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SelectionList, {\n      data: filteredSeries,\n      onSelect: seriesItem => handleSelectSeries(params.get('category'), manufacturerCode, seriesItem.id),\n      title: null // Eliminar el título \"Select Series\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(Series, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = Series;\nexport default Series;\nvar _c;\n$RefreshReg$(_c, \"Series\");","map":{"version":3,"names":["React","SelectionList","seriesData","manufacturersData","useNavigate","jsxDEV","_jsxDEV","Series","onSelectSeries","setManufacturer","setManufacturerName","setManufacturerLogo","setSeries","setSeriesName","setModel","setModelName","_s","params","URLSearchParams","window","location","search","manufacturerCode","get","navigate","manufacturer","manufacturers","find","code","filteredSeries","series","filter","seriesItem","manufacturerId","id","handleSelectSeries","categoryCode","seriesId","parseInt","console","error","name","logo","className","children","src","alt","style","height","fileName","_jsxFileName","lineNumber","columnNumber","data","onSelect","title","_c","$RefreshReg$"],"sources":["/Users/jrangel/Documents/dev/cross-reference-git/src/modules/series/Series.js"],"sourcesContent":["import React from 'react';\nimport SelectionList from '../shared/SelectionList';\nimport seriesData from './series.json';\nimport manufacturersData from '../manufacturers/manufacturers.json';\nimport { useNavigate } from 'react-router-dom';\n\nconst Series = ({\n  onSelectSeries,\n  setManufacturer,\n  setManufacturerName,\n  setManufacturerLogo,\n  setSeries,\n  setSeriesName,\n  setModel,\n  setModelName\n}) => {\n  const params = new URLSearchParams(window.location.search);\n  const manufacturerCode = params.get('manufacturer');\n  const navigate = useNavigate();\n\n  const manufacturer = manufacturersData.manufacturers.find(manufacturer => manufacturer.code === manufacturerCode);\n  const filteredSeries = seriesData.series.filter(seriesItem => seriesItem.manufacturerId === manufacturer.id);\n\n  const handleSelectSeries = (categoryCode, manufacturerCode, seriesId) => {\n    const manufacturer = manufacturersData.manufacturers.find(manufacturer => manufacturer.code === manufacturerCode);\n    const series = seriesData.series.find(series => series.id === parseInt(seriesId));\n\n    if (!manufacturer || !series) {\n      console.error(\"Manufacturer or series not found\");\n      return;\n    }\n\n    setManufacturer(manufacturer.code);\n    setManufacturerName(manufacturer.name);\n    setManufacturerLogo(manufacturer.logo);\n    setSeries(series.id);\n    setSeriesName(series.name);\n    setModel('');\n    setModelName('Select One');\n    navigate(`/?tab=model&category=${categoryCode}&manufacturer=${manufacturerCode}&series=${seriesId}`);\n  };\n\n  return (\n    <div className=\"container-fluid mb-5\">\n      <div className=\"row\">\n        <div className=\"d-flex align-items-center\">\n          <img src={manufacturer.logo} alt={manufacturer.name} className=\"img-fluid me-2 border\" style={{ height: '100px' }} />\n          <h4 className='ps-2'>{manufacturer.name} <span className='fw-bold'>Series</span></h4>\n        </div>\n      </div>\n      <SelectionList\n        data={filteredSeries}\n        onSelect={(seriesItem) => handleSelectSeries(params.get('category'), manufacturerCode, seriesItem.id)}\n        title={null}  // Eliminar el título \"Select Series\"\n      />\n    </div>\n  );\n};\n\nexport default Series;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}