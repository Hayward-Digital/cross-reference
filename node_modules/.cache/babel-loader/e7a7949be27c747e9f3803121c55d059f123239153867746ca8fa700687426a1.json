{"ast":null,"code":"var _jsxFileName = \"/Users/jrangel/Documents/dev/cross-reference/src/modules/models/Alternatives.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport modelsData from './models.json';\nimport './Alternatives.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Alternatives = () => {\n  _s();\n  const {\n    modelId\n  } = useParams();\n  const selectedModel = modelsData.models.find(model => model.id === parseInt(modelId));\n  if (!selectedModel) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Modelo no encontrado.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 12\n    }, this);\n  }\n  const relatedModels = selectedModel.relatedModels || {};\n  const goodModel = modelsData.models.find(model => model.id === relatedModels.good);\n  const betterModel = modelsData.models.find(model => model.id === relatedModels.better);\n  const bestModel = modelsData.models.find(model => model.id === relatedModels.best);\n  const renderModelCard = (model, label) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `model-card ${label.toLowerCase()}`,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: `/images/${model.image}`,\n      alt: model.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: model.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"SKU: \", model.sku]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: model.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      href: model.productDetailUrl,\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      children: \"Detalles del Producto\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"alternatives-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"HAYWARD Alternatives\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-container\",\n      children: [goodModel && renderModelCard(goodModel, 'Good'), betterModel && renderModelCard(betterModel, 'Better'), bestModel && renderModelCard(bestModel, 'Best')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(Alternatives, \"WEOzYzwoZNNPClhL0nRImh9DIpU=\", false, function () {\n  return [useParams];\n});\n_c = Alternatives;\nexport default Alternatives;\nvar _c;\n$RefreshReg$(_c, \"Alternatives\");","map":{"version":3,"names":["React","useParams","modelsData","jsxDEV","_jsxDEV","Alternatives","_s","modelId","selectedModel","models","find","model","id","parseInt","children","fileName","_jsxFileName","lineNumber","columnNumber","relatedModels","goodModel","good","betterModel","better","bestModel","best","renderModelCard","label","className","toLowerCase","src","image","alt","name","sku","description","href","productDetailUrl","target","rel","_c","$RefreshReg$"],"sources":["/Users/jrangel/Documents/dev/cross-reference/src/modules/models/Alternatives.js"],"sourcesContent":["import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport modelsData from './models.json';\nimport './Alternatives.css';\n\nconst Alternatives = () => {\n  const { modelId } = useParams();\n  const selectedModel = modelsData.models.find(model => model.id === parseInt(modelId));\n\n  if (!selectedModel) {\n    return <div>Modelo no encontrado.</div>;\n  }\n\n  const relatedModels = selectedModel.relatedModels || {};\n  const goodModel = modelsData.models.find(model => model.id === relatedModels.good);\n  const betterModel = modelsData.models.find(model => model.id === relatedModels.better);\n  const bestModel = modelsData.models.find(model => model.id === relatedModels.best);\n\n  const renderModelCard = (model, label) => (\n    <div className={`model-card ${label.toLowerCase()}`}>\n      <h3>{label}</h3>\n      <img src={`/images/${model.image}`} alt={model.name} />\n      <h4>{model.name}</h4>\n      <p>SKU: {model.sku}</p>\n      <p>{model.description}</p>\n      <a href={model.productDetailUrl} target=\"_blank\" rel=\"noopener noreferrer\">Detalles del Producto</a>\n    </div>\n  );\n\n  return (\n    <div className=\"alternatives-container\">\n      <h2>HAYWARD Alternatives</h2>\n      <div className=\"flex-container\">\n        {goodModel && renderModelCard(goodModel, 'Good')}\n        {betterModel && renderModelCard(betterModel, 'Better')}\n        {bestModel && renderModelCard(bestModel, 'Best')}\n      </div>\n    </div>\n  );\n};\n\nexport default Alternatives;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}